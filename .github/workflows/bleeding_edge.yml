# This is a basic workflow to help you get started with Actions
name: Pre-release

on:
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  build-files:
    name: Bleeding-Edge
    runs-on: ${{ matrix.config.os }}
    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false
      matrix: 
        config:
        - {
          name: "Windows",
          os: windows-latest,
          artifact: "LabTools-Win.exe",
          cc: "x86_64-w64-mingw32-gcc",
          cxx: "x86_64-w64-mingw32-g++",
          binpath: "Release/LabTools.exe",
          build_type: "Release",
          archiver: "7z a",
        }
        - {
          name: "Linux (Ubuntu)",
          os: ubuntu-latest,
          artifact: "LabTools-Ubuntu",
          cc: "gcc",
          cxx: "g++",
          binpath: "LabTools",
          build_type: "Release",
          archiver: "7z a",
        }
        - {
          name: "Mac",
          os: macos-latest,
          artifact: "LabTools-MacOS",
          cc: "clang",
          cxx: "clang++",
          binpath: "LabTools",
          build_type: "Release",
          archiver: "7za a",
        }

    steps:
      - uses: actions/checkout@v2        
      
      - name: Print env
        run: |
          echo github.event.action: ${{ github.event.action }}
          echo github.event_name: ${{ github.event_name }}

      - name: Confiure
        run: |
            cmake -E make_directory build

      - name: Build
        working-directory: build
        run: |
            cmake -D CMAKE_CXX_COMPILER=${{ matrix.config.cxx }} CMAKE_C_COMPILER=${{ matrix.config.cc }} .. 
            cmake --build . --config Release

            mv -v ${{ matrix.config.binpath }} ../${{ matrix.config.artifact }}

      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          path: |
              res
              ${{ matrix.config.artifact }}
          name: ${{ matrix.config.name }}
  
  prerelease:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/master' }}

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2

      - name: Update GitHub prerelease
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: latest
          prerelease: true
          title: "Latest Build"
          files: "**/LabTools-*.zip"



        
      